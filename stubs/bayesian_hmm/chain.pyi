# Stubs for bayesian_hmm.chain (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

import numpy as np
from typing import Any, Dict, List, Optional, Sequence, Set, Tuple, Union

Numeric = Union[int, float]

class Chain:
    emission_sequence: Any = ...
    latent_sequence: Any = ...
    T: Any = ...
    def __init__(self, sequence: List[Union[str, Numeric]]) -> None: ...
    def __len__(self) -> int: ...
    @property
    def initialised_flag(self) -> bool: ...
    @initialised_flag.setter
    def initialised_flag(self, value: bool) -> None: ...
    def tabulate(self) -> np.array: ...
    def initialise(self, states: Sequence) -> None: ...
    def neglogp_chain(self, p_initial: Dict[Optional[str], Numeric], p_emission: Dict[Any, Dict[Any, Numeric]], p_transition: Dict[Any, Dict[Any, Numeric]]) -> float: ...
    @staticmethod
    def resample_latent_sequence(sequences: Tuple[List[str], List[str]], states: Set[str], p_initial: Dict[Optional[str], Numeric], p_emission: Dict[Optional[str], Dict[Optional[str], Numeric]], p_transition: Dict[Optional[str], Dict[Optional[str], Numeric]]) -> List[str]: ...
