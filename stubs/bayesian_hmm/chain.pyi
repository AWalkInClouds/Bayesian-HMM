# Stubs for bayesian_hmm.chain (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any, Dict, List, Optional, Sequence, Set, Tuple, Union

import numpy as np

Numeric = Union[int, float]
DictStrNum = Dict[Optional[str], Numeric]
InitDict = DictStrNum
DictStrDictStrNum = Dict[Optional[str], DictStrNum]
NestedInitDict = DictStrDictStrNum

class Chain:
    emission_sequence: Any = ...
    latent_sequence: Any = ...
    T: Any = ...
    def __init__(self, sequence: List[Optional[str]]) -> None: ...
    def __len__(self) -> int: ...
    @property
    def initialised_flag(self) -> bool: ...
    @initialised_flag.setter
    def initialised_flag(self, value: bool) -> None: ...
    def tabulate(self) -> np.array: ...
    def initialise(self, states: Sequence) -> None: ...
    def neglogp_chain(
        self, p_initial: InitDict, p_emission: NestedInitDict, p_transition: NestedInitDict
    ) -> Numeric: ...
    @staticmethod
    def resample_latent_sequence(
        sequences: Tuple[List[str], List[str]],
        states: Set[str],
        p_initial: InitDict,
        p_emission: NestedInitDict,
        p_transition: NestedInitDict,
    ) -> List[str]: ...
