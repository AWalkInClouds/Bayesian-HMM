# Stubs for bayesian_hmm.bayesian_model.auxiliary_variable (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

import typing
from . import hyperparameter, states, stick_breaking_process, variable
from typing import Any

class AuxiliaryVariable(variable.Variable):
    alpha: Any = ...
    beta: Any = ...
    value: Any = ...
    def __init__(self, alpha: hyperparameter.Hyperparameter, beta: stick_breaking_process.StickBreakingProcess) -> None: ...
    @staticmethod
    def single_variable_log_likelihood(scale: float, value: int, count: int, exact: bool) -> float: ...
    @staticmethod
    def single_variable_resample(scale: float, count: int, exact: bool) -> int: ...
    def log_likelihood(self, counts: typing.Dict[states.State, typing.Dict[states.State, int]], exact: bool=...) -> float: ...
    def resample(self, counts: typing.Dict[states.State, typing.Dict[states.State, int]], exact: bool=...) -> typing.Dict[states.State, typing.Dict[states.State, int]]: ...
    def value_aggregated(self) -> typing.Dict[states.State, int]: ...
