# Stubs for bayesian_hmm.bayesian_model.hyperparameter (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

import typing
from . import variable
from typing import Any

class Hyperparameter(variable.Variable):
    prior: Any = ...
    prior_log_likelihood: Any = ...
    value: Any = ...
    def __init__(self, prior: typing.Callable[[], typing.Union[float, int]], log_likelihood: typing.Callable[[typing.Union[float, int]], float]) -> None: ...
    def log_likelihood(self) -> float: ...
    def resample(self, posterior_log_likelihood: typing.Optional[typing.Callable[[typing.Union[float, int]], float]]=..., force: bool=...) -> typing.Union[float, int]: ...

class Gamma(Hyperparameter):
    def __init__(self, shape: float=..., scale: float=...) -> None: ...

class Beta(Hyperparameter):
    def __init__(self, shape: float=..., scale: float=...) -> None: ...

class Dummy(Hyperparameter):
    def __init__(self, value: typing.Union[int, float]=...) -> None: ...
    def resample(self, posterior_log_likelihood: typing.Optional[typing.Callable[[typing.Union[float, int]], float]]=..., force: bool=...) -> typing.Union[float, int]: ...
